<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="priv.wzq.ssm.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="priv.wzq.ssm.po.Member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="schoolNumber" property="schoolnumber" jdbcType="VARCHAR" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="academy" property="academy" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="clazz" property="clazz" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, schoolNumber, nation, idcard, qq, phone, academy, major, clazz, sex, openid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="priv.wzq.ssm.po.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="priv.wzq.ssm.po.MemberExample" >
    delete from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="priv.wzq.ssm.po.Member" >
    insert into member (id, name, schoolNumber, 
      nation, idcard, qq, 
      phone, academy, major, 
      clazz, sex, openid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{schoolnumber,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{academy,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{clazz,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="priv.wzq.ssm.po.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="schoolnumber != null" >
        schoolNumber,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="academy != null" >
        academy,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="clazz != null" >
        clazz,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="openid != null" >
        openid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="schoolnumber != null" >
        #{schoolnumber,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="priv.wzq.ssm.po.MemberExample" resultType="java.lang.Integer" >
    select count(*) from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolnumber != null" >
        schoolNumber = #{record.schoolnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null" >
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.academy != null" >
        academy = #{record.academy,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.clazz != null" >
        clazz = #{record.clazz,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      schoolNumber = #{record.schoolnumber,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      academy = #{record.academy,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="priv.wzq.ssm.po.Member" >
    update member
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="schoolnumber != null" >
        schoolNumber = #{schoolnumber,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="academy != null" >
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.wzq.ssm.po.Member" >
    update member
    set name = #{name,jdbcType=VARCHAR},
      schoolNumber = #{schoolnumber,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 删除openid -->
  <delete id="deleteByOpenid" parameterType="java.lang.String">
      delete from member where openid=#{openid} 
  </delete>
  
  <select id="getMemberCount" resultType="int">
      select count(*) from member
  </select>
  <!-- 根据学号查看用户信息 -->
  <select id="getInfoBySchoolNumber" parameterType="java.lang.String" resultType="priv.wzq.ssm.po.Member">
      select * from member where schoolNumber = #{nameornumber}
  </select>
  
  <!-- 查看信息根据姓名 -->
  <select id="getInfoByName" parameterType="java.lang.String" resultType="priv.wzq.ssm.po.Member">
      select * from member where name = #{name}
  </select>
   <!-- 根据性别查看人数-->
  <select id="getCountBySex" parameterType="java.lang.String" resultType="int">
      select count(*) from member where sex = #{sex}
  </select>
  
  <select id="getAllMember" resultType="priv.wzq.ssm.po.Member">
      select * from member 
  </select>
  
  
  <select id="getInfoByOpenid" resultType="priv.wzq.ssm.po.Member" parameterType="java.lang.String">
      select * from member where openid=#{openid}
  </select>
  
  <update id="setOpenId" parameterType="priv.wzq.ssm.po.Member">
      update member set openid=#{openid} where schoolNumber=#{schoolnumber}
  </update>
  
  
  <delete id="deleteBySchoolNumber" parameterType="java.lang.String">
      delete member where schoolNumber = #{schoolnumber}    
  </delete>
  <select id="getAllQQ" resultType="java.lang.String">
      SELECT 
	  member.`qq` 
	FROM
	  member 
  </select>
  
  <select id="getAllSchoolNumber">
      SELECT 
	  member.`schoolNumber` 
	FROM
	  member ;
  </select>
  
  
  <select id="getAllQQAndSchoolNumber" resultType="priv.wzq.ssm.po.Member">
      SELECT 
	  member.`qq`,
	  member.`schoolNumber` 
	FROM
	  member 
      
  </select>
  
</mapper>