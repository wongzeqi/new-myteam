<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nun.wjq.project.mapper.ProjectfileMapper">
  <resultMap id="BaseResultMap" type="com.nun.wjq.project.model.Projectfile">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="filetype" jdbcType="VARCHAR" property="filetype" />
    <result column="uploaddate" jdbcType="VARCHAR" property="uploaddate" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="stage" jdbcType="INTEGER" property="stage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, path, filetype, uploaddate, sid, pid, stage
  </sql>
  <select id="selectByExample" parameterType="com.nun.wjq.project.model.ProjectfileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from projectfile
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from projectfile
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nun.wjq.project.model.ProjectfileExample">
    delete from projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nun.wjq.project.model.Projectfile">
    insert into projectfile (id, path, filetype, 
      uploaddate, sid, pid, 
      stage)
    values (#{id,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{filetype,jdbcType=VARCHAR}, 
      #{uploaddate,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{stage,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nun.wjq.project.model.Projectfile">
    insert into projectfile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="filetype != null">
        filetype,
      </if>
      <if test="uploaddate != null">
        uploaddate,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="stage != null">
        stage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null">
        #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="uploaddate != null">
        #{uploaddate,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nun.wjq.project.model.ProjectfileExample" resultType="java.lang.Integer">
    select count(*) from projectfile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update projectfile
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.filetype != null">
        filetype = #{record.filetype,jdbcType=VARCHAR},
      </if>
      <if test="record.uploaddate != null">
        uploaddate = #{record.uploaddate,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update projectfile
    set id = #{record.id,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      filetype = #{record.filetype,jdbcType=VARCHAR},
      uploaddate = #{record.uploaddate,jdbcType=VARCHAR},
      sid = #{record.sid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      stage = #{record.stage,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nun.wjq.project.model.Projectfile">
    update projectfile
    <set>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="filetype != null">
        filetype = #{filetype,jdbcType=VARCHAR},
      </if>
      <if test="uploaddate != null">
        uploaddate = #{uploaddate,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nun.wjq.project.model.Projectfile">
    update projectfile
    set path = #{path,jdbcType=VARCHAR},
      filetype = #{filetype,jdbcType=VARCHAR},
      uploaddate = #{uploaddate,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      stage = #{stage,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 查询项目以及文件列表 -->
  <select id="selectFileListByStage" parameterType="com.nun.wjq.project.utils.Page"  resultType="com.nun.wjq.project.result.Pst">
  	SELECT 
	  project.*,
	  projectfile.*,
	  student.*,
	  teacher.tname,
	  COUNT(stage) AS filecount 
	FROM
	  project,
	  projectfile,
	  student,
	  teacher 
	WHERE project.`pid` = projectfile.`pid` 
	  AND project.sid = student.sid 
	  AND teacher.tid = project.tid 
	  AND projectfile.`stage` = #{stage} 
	GROUP BY project.pid
	order by project.pid
	 LIMIT ${(pageCount-1)*itemCount},${itemCount} 
  </select>
  
  
  
  <select id="selectFileListByStageAndPid" parameterType="com.nun.wjq.project.model.Projectfile" resultType="com.nun.wjq.project.model.Projectfile">
 		select * from projectfile where pid = #{pid} and stage=#{stage}
 	</select>
  
  
  
  
</mapper>